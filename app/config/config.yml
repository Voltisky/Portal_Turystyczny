imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: @BackendPoiBundle/Resources/config/admin.yml }
    - { resource: @BackendAdministracyjneBundle/Resources/config/admin.yml }
    - { resource: @ApplicationSonataUserBundle/Resources/config/admin.xml }
    - { resource: @ApplicationSonataClassificationBundle/Resources/config/admin.xml }
    - { resource: "@BackendCommonBundle/Resources/config/services.yml" }
    - { resource: "@BackendCommonBundle/Resources/config/admin.yml" }
    - { resource: "@FrontendMainBundle/Resources/config/services.yml" }
    - { resource: "@FrontendMapaBundle/Resources/config/services.yml" }
    - { resource: "@FrontendPoiBundle/Resources/config/services.yml" }
    - { resource: "@FrontendUserBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: pl

fos_user:
    db_driver:      orm # can be orm or odm
    firewall_name:  main
    user_class:     Application\Sonata\UserBundle\Entity\User


    group:
        group_class:   Application\Sonata\UserBundle\Entity\Group
        group_manager: sonata.user.orm.group_manager                    # If you're using doctrine orm (use sonata.user.mongodb.group_manager for mongodb)

    service:
        user_manager: sonata.user.orm.user_manager

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.root_dir%/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id: ~
    fragments: ~
    http_method_override: true

# Twig Configuration
twig:
    cache:  false
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

    #Sonata with Symfony >= 2.6
    form_themes:
        - 'SonataFormatterBundle:Form:formatter.html.twig'
        - 'BackendCommonBundle:Form:fields.html.twig'
        - 'SonataCoreBundle:Form:datepicker.html.twig'
        
sonata_admin:
    title: Portal turystyczny
#    title_logo: bundles/venecomponents/img/logo-vene.png
    dashboard:
        groups:
            Administracja: ~
            Konfiguracja: ~
            POI i Szlaki: ~           
            sonata_categories:       
                label_catalogue: SonataClassificationBundle           
            sonata_user:
                label_catalogue: SonataUserBundle
            sonata_media:
               label_catalogue: SonataMediaBundle
               items:
                   - sonata.media.admin.media
                   - sonata.media.admin.gallery
            
sonata_formatter:
    formatters:
        markdown:
            service: sonata.formatter.text.markdown
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig #keep this commented unless you are using media bundle.


        text:
            service: sonata.formatter.text.text
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig


        rawhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig


        richhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig


        twig:
            service: sonata.formatter.text.twigengine
            extensions: [] # Twig formatter cannot have extensions

# Doctrine Configuration
stof_doctrine_extensions:
    default_locale: '%locale%'
    orm:
        default:
            timestampable: true
            sluggable: true
            translatable: true

a2lix_translation_form:
    locales: [en, de]       # [1]
    default_required: true          # [2]
    manager_registry: doctrine      # [3]
    templating: "A2lixTranslationFormBundle::default.html.twig"      # [4]

doctrine:
    dbal:
        types:
            json: Sonata\Doctrine\Types\JsonType
        driver: pdo_pgsql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.root_dir%/data/data.db3'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        entity_managers:
            default:
                naming_strategy: doctrine.orm.naming_strategy.underscore
                auto_mapping: true
                mappings:
                    gedmo_translatable:
                        type: annotation
                        prefix: Gedmo\Translatable\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/Entity"
                        alias: GedmoTranslatable # (optional) it will default to the name set for the mapping
                        is_bundle: false
                    gedmo_translator:
                        type: annotation
                        prefix: Gedmo\Translator\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translator/Entity"
                        alias: GedmoTranslator # (optional) it will default to the name set for the mapping
                        is_bundle: false
                    gedmo_loggable:
                        type: annotation
                        prefix: Gedmo\Loggable\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Loggable/Entity"
                        alias: GedmoLoggable # (optional) it will default to the name set for the mappingmapping
                        is_bundle: false
                    gedmo_tree:
                        type: annotation
                        prefix: Gedmo\Tree\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity"
                        alias: GedmoTree # (optional) it will default to the name set for the mapping
                        is_bundle: false
                dql:
                    numeric_functions:
                        COS: Backend\CommonBundle\DQL\Cos
                        PI: Backend\CommonBundle\DQL\Pi
                    string_functions:
                        SIMILARITY: Backend\CommonBundle\DQL\Similarity
                        STDISTANCE: Backend\CommonBundle\DQL\STDistance

# app/config/config.yml
sonata_media:
    # if you don't use default namespace configuration
    #class:
    #    media: MyVendor\MediaBundle\Entity\Media
    #    gallery: MyVendor\MediaBundle\Entity\Gallery
    #    gallery_has_media: MyVendor\MediaBundle\Entity\GalleryHasMedia
    db_driver: doctrine_orm # or doctrine_mongodb, doctrine_phpcr it is mandatory to choose one here
    default_context: default # you need to set a context
    contexts:
        sonata_category:
            providers:
              - sonata.media.provider.image

            formats:
                preview: { width: 100, quality: 100}
                wide:    { width: 820, quality: 100}
        default:  # the default context is mandatory
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file
                - sonata.media.provider.vimeo

            formats:
                small: { width: 100 , quality: 100}
                big:   { width: 500 , quality: 100}
    cdn:
        server:
            path: /uploads/media # http://media.sonata-project.org/

    filesystem:
        local:
            directory:  "%kernel.root_dir%/../web/uploads/media"
            create:     false

sonata_user:
    security_acl: true
    manager_type: orm # can be orm or mongodb

sonata_block:
    default_contexts: [cms]
    blocks:
        # enable the SonataAdminBundle block
        sonata.admin.block.admin_list:
            contexts: [admin]
        sonata.user.block.menu:    # used to display the menu in profile pages
        sonata.user.block.account: # used to display menu option (login option)
        sonata.block.service.text: # used to if you plan to use Sonata user routes
        sonata.user.block.account: #used to display menu option (login option)
        sonata.block.service.action:
        # Some specific block from the SonataMediaBundle
        sonata.media.block.media:
        sonata.media.block.gallery:
        #sonata.media.block.feature_media:
        sonata.admin.block.search_result:
            contexts:   [admin]
        sonata.block.service.lstseen: ~


# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

assetic:
    debug:          '%kernel.debug%'
    use_controller: '%kernel.debug%'
    assets:
        base_assets_js:
            inputs:
                - '@FrontendMainBundle/Resources/public/js/material.min.js'
                - '@FrontendMainBundle/Resources/public/js/materialize.min.js'
                - '@FrontendMainBundle/Resources/public/js/main.js'
        base_assets_css:
            inputs:
                - '@FrontendMainBundle/Resources/public/css/material.min.css'
                - '@FrontendMainBundle/Resources/public/css/materialize.min.css'
                - '@FrontendMainBundle/Resources/public/css/style.css'
        base_map_js:
            inputs:
                - '@FrontendMapaBundle/Resources/public/js/ol-debug.js'
                - '@FrontendMapaBundle/Resources/public/js/map.js'
        base_map_css:
            inputs:
                - '@FrontendMapaBundle/Resources/public/css/ol.css'
    filters:
        cssrewrite: ~